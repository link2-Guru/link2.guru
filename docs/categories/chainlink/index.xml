<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chainlink on LINK2.GURU</title>
    <link>https://link2.guru/categories/chainlink/</link>
    <description>Recent content in Chainlink on LINK2.GURU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://link2.guru/categories/chainlink/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>chainlink合约源码分析（1）</title>
      <link>https://link2.guru/blog/chainlink%E5%90%88%E7%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%901/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://link2.guru/blog/chainlink%E5%90%88%E7%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%901/</guid>
      <description>今天我们分析chainlink合约源码。
ChainlinkClient.sol 位置ChainlinkClient.sol
主要代码 /** * @notice 构建一个ChainlinkRequest * @param _specId node 节点创建的jobId * @param _callbackAddress 请求成功数据回调的地址 * @param _callbackFunctionSignature 回调地址对应的function * @return A Chainlink Request struct in memory */ function buildChainlinkRequest( bytes32 _specId, address _callbackAddress, bytes4 _callbackFunctionSignature ) internal pure returns (Chainlink.</description>
    </item>
    
  </channel>
</rss>
