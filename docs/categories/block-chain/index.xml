<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Block Chain on LINK2.GURU</title>
    <link>https://link2.guru/categories/block-chain/</link>
    <description>Recent content in Block Chain on LINK2.GURU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://link2.guru/categories/block-chain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>chainlink合约源码分析（2）</title>
      <link>https://link2.guru/blog/chainlink%E5%90%88%E7%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%902/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://link2.guru/blog/chainlink%E5%90%88%E7%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%902/</guid>
      <description>今天我们分析chainlink合约源码。
Oracle.sol Oracle 合约在收到转账之后，会触发 onTokenTransfer 方法，该方法会检查转账的有效性，并通过发出 OracleRequest 事件记录更为详细的数据信息 位置Oracle.sol
主要代码 /// LinkTokenReceiver.</description>
    </item>
    
    <item>
      <title>chainlink合约源码分析（1）</title>
      <link>https://link2.guru/blog/chainlink%E5%90%88%E7%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%901/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://link2.guru/blog/chainlink%E5%90%88%E7%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%901/</guid>
      <description>今天我们分析chainlink合约源码。
ChainlinkClient.sol 位置ChainlinkClient.sol
主要代码 /** * @notice 构建一个ChainlinkRequest * @param _specId node 节点创建的jobId * @param _callbackAddress 请求成功数据回调的地址 * @param _callbackFunctionSignature 回调地址对应的function * @return A Chainlink Request struct in memory */ function buildChainlinkRequest( bytes32 _specId, address _callbackAddress, bytes4 _callbackFunctionSignature ) internal pure returns (Chainlink.</description>
    </item>
    
    <item>
      <title>运行Near主网节点（非验证节点）</title>
      <link>https://link2.guru/blog/how-to-run-mainnet-on-near/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://link2.guru/blog/how-to-run-mainnet-on-near/</guid>
      <description>注册钱包 首先你创建主网钱包地址，并激活。wallet.near.org
部署主网节点（非验证节点）  clone nearcore  git clone https://github.com/near/nearcore.git 设置环境变量  export NEAR_RELEASE_VERSION=$(curl -s https://github.</description>
    </item>
    
  </channel>
</rss>
